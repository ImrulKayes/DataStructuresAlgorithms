def isBadVersion(num):    dic={1:True,2:True}    return dic[num]class Solution(object):    def firstBadVersion(self, n):        """        :type n: int        :rtype: int        """        if n == 0:            return 0        return self.search(1, n)    def binarySearch(self, nums,l, r,target):        while l<=r:            mid=(l+r)/2            if nums[mid]==target:                return True            if target<nums[mid]:                r=mid-1            else:                l=mid+1        return False        solution=Solution()print solution.binarySearch([1,2,3,4,5],0,4,1)print solution.binarySearch([1,2,3,4,5],0,4,2)print solution.binarySearch([1,2,3,4,5],0,4,3)print solution.binarySearch([1,2,3,4,5],0,4,4)print solution.binarySearch([1,2,3,4,5],0,4,5)print solution.binarySearch([1,2,3,4,5],0,4,0)print solution.binarySearch([1,2,3,4,5],0,4,6)