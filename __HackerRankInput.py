"BE VERY VERY CAREFUL ABOUT INPUT,OUTPUT and TYPE IN HACKERRANK""for example this following # print in hackerrank might causea lot of problems in output if you are silly!"n = int(raw_input().strip())for i in range(n):    st=''    for j in range(n-i-1):        st+=" "    for j in range(i+1):        st+="#"    print st"simply reverse print a line of int. You might fail if you dont pay attention to types"n = int(raw_input().strip())arr = map(int,raw_input().strip().split(' ')) <---res=[]for i in range(n):    res.insert(0,str(arr[i])) 'type is here'res=' '.join(res)print resif __name__=="__main__":    lines=[]    # read three lines    for i in range(3):        lines.append(raw_input())    m,t,x=float(lines[0]),float(lines[1]),float(lines[2])    tip=float(t*m)/100.00    tax=float(x*m)/100.00    print "The final price of the meal is $"+str(int(round(m+tip+tax)))+"."N = int(raw_input().strip())  -->raw input is processed as int"When a number of test cases is at the first and follows by test cases"T=int(raw_input())for i in range(T):    age=int(raw_input())             p=Person(age)      p.amIOld()    for j in range(0,3):        p.yearPasses();            p.amIOld();    print """sample program: it takes 2 test cases, do some calculation"def result(a,b,n):    output=[]    res=a    for i in range(n):        res+=(2**i)*b        output.append(str(res))    print ' '.join(output)T=int(raw_input().strip())for i in range(T):    lines=raw_input().strip()    lines=lines.split()    a,b,n=int(lines[0]),int(lines[1]),int(lines[2])    result(a,b,n)"another input processing"n = int(raw_input().strip())arr = map(int,raw_input().strip().split(' '))"The first line will have an integer N denoting the number of entries in the phone book."Each entry consists of two lines: a name and the corresponding phone number. After these, there will be some queries. Each query will contain name of a friend. Read the queries until end-of-file."N=int(raw_input())dic={}for i in range(N):    name=raw_input().strip()    phone=raw_input().strip()    dic[name]=phonewhile True:    try:        name=raw_input()  "used exception to handle stdin EOF"    except Exception:        break    if not name:        break    if dic.has_key(name):        print name+"="+dic[name]    else:        print "Not found""Xor-sequence: https://www.hackerrank.com/contests/hourrank-5/challenges/xor-se/copy-from/5006227"import sysdef getXORs(r):    res=[0 for i in xrange(r)]    for i in xrange(1,r):        res[i]=res[i-1]^i    return res    Q = int(raw_input().strip())max=long(-1)inputs=[]for a0 in xrange(Q):    L,R = raw_input().strip().split(' ')    L,R = [long(L),long(R)]    if R>max:        max=R    inputs+=[L,R]res=getXORs(max+1)i=long(0)while i<len(inputs):    L=inputs[i]    R=inputs[i+1]    output=res[L]    for j in xrange(L+1,R+1):        output^=res[j]    print output    i+=2'getting input from command line file'    nums=[]    for line in open(str(sys.argv[1])):        nums.append(int(line.strip()))'getting input from stdin'import sysnums=[]for line in sys.stdin:    nums.append(int(line.strip()))