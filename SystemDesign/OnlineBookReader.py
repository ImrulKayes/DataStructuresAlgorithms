'''Design an online book reader system:* User membership creation an extension * searching library for a book * reading book * for simplicty assume one active user  and one active book'''class Book:    def __init__(self,id,details):        self.bookId=id        self.details=details    "getters and setters"class User:    def __init__(self,id,details,accountType):        self.userId=id        self.details=details        self.account.Type=accountType    def renewMembership(self): pass    "getters and setters"class userManager:    def __init__(self):        self.users= {}     def addUser(self,id, details,accountType):        if self.users.has_key(id):            return        user=User(id, details,accountType)        self.user[id]=user        return user        def remove(user):        del self.users[user.getID()]    def remove(id):        if not self.users.has_key(id):            return False        del self.users[id]        return True    def find(id):        return self.users[id]class Library:    def __init__(self):        self.books= {}     def addBook(self,id, details):        if self.books.has_key(id):            return        book=Book(id, details)        self.books[id]=book        return book        def remove(self,book):        del self.books[book.getID()]    def remove(self,id):        if not self.books.has_key(id):            return False        del self.books[id]        return True    def find(self,id):        return self.books[id]    class Display:    def __init__(self):        self.activeUser=None        self.activeBook=None    def displayUser(user):        self.activeUser=user        self.refreshUsername()            def displayBook(book):        self.pageNumber=0        activeBook=book        self.refreshTitle()        self.refreshDetails()        self.refreshPage()            def turnPageForward():        self.pageNumber+=1        self.refreshPage()    def turnPageBackward():        self.pageNumber-=1        self.refreshPage()            def refreshUsername(self): pass    def refreshTitle(self): pass    def refreshDetails(self): pass    def refreshPage(self): pass    class OnlineReaderSystem:    def __init__(self):        self.userManager=userManager()        self.library=Library()        self.display=Display()        self.activeBook=None        self.activeUser=None    "getters and setters for userManager,library,display"    "getter for active book"    def setActiveBook(self,book):        self.activeBook=book        display.displayBook(book)    "getter for active user"    def setActiveUser(self,user):        self.activeUser=user        display.displayUser(user)                