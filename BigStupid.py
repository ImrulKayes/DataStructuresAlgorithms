'Sort an array by frequence: [2,5,2,8,5,6,8,8] would give 6,2,5,8. If freq tie consider first apperace of elements''what I do wrong in syntax: access dictionary with () rather than []. Spelling mistake for array, using nums in palce of num (all of them are silly, lack of attention)'def getCountAndIndex(nums):    'create a dictionary with count and first appearance'    dic={}    for i in range(len(nums)):        num=nums[i]        if dic.has_key(num):            dic[num][0]+=1        else:            dic[num]=[]            dic[num]+=[1,i]    return dicdef mergeSort(array,dic):    if len(array)<=1:        return array    mid=len(array)/2    left=mergeSort(array[:mid],dic)    right=mergeSort(array[mid:],dic)    res=[]    'traditional merge Sort, tweaking for frequencies'    while left and right:        if left[0][1]<right[0][1]:            res.append(left.pop(0))        elif left[0][1]>right[0][1]:            res.append(right.pop(0))        else:            'if frequencies are the same the consider which appeared first'            if dic[left[0][0]][1]<dic[right[0][0]][1]:                res.append(left.pop(0))            else:                res.append(right.pop(0))    if left:        res+=left    if right:        res+=right    return resdef sort(dic):    'used to call mergeSort with a lists of lists of the form [key,freq], rather than dictionary'    array=[]    for k,v in dic.iteritems():        array.append([k,v[0]])    output=mergeSort(array,dic)    'return only keys'    return [vals[0] for vals in output]    'Driver'    if __name__=="__main1__":    dic=getCountAndIndex([2,5,2,8,5,6,8,8])    print sort(dic)    